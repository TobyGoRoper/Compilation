Terminals unused in grammar

   DIV


Grammar

    0 $accept: prog $end

    1 prog: inst PV
    2     | prog inst PV

    3 inst: aff
    4     | exp

    5 aff: aff_id
    6    | aff_fun

    7 aff_id: ID EQ exp

    8 aff_fun: fun_head EQ exp

    9 fun_head: ID id_list

   10 id_list: ID
   11        | id_list ID

   12 exp: arith_exp
   13    | atom_exp
   14    | control_exp
   15    | let_exp
   16    | LPAR funcall_exp RPAR

   17 arith_exp: MOINS exp
   18          | exp PLUS exp
   19          | exp MULT exp
   20          | exp CONCAT exp

   21 atom_exp: NUM
   22         | FLOAT
   23         | STRING
   24         | ID
   25         | list_exp
   26         | LPAR exp RPAR

   27 control_exp: IF bool THEN atom_exp ELSE atom_exp

   28 let_exp: let2 aff IN atom_exp

   29 let2: LET

   30 funcall_exp: ID atom_list

   31 atom_list: atom_exp
   32          | atom_list atom_exp

   33 list_exp: LBR exp_list RBR

   34 exp_list: exp
   35         | exp_list VIR exp

   36 bool: BOOL
   37     | bool OR bool
   38     | bool AND bool
   39     | NOT bool
   40     | exp comp exp
   41     | LPAR bool RPAR

   42 comp: ISLT
   43     | ISGT
   44     | ISLEQ
   45     | ISGEQ
   46     | ISEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM <val> (258) 21
FLOAT <val> (259) 22
ID <sid> (260) 7 9 10 11 24 30
STRING (261) 23
PV (262) 1 2
LPAR (263) 16 26 41
RPAR (264) 16 26 41
LBR (265) 33
RBR (266) 33
LET (267) 29
IN (268) 28
VIR (269) 35
IF (270) 27
THEN (271) 27
ELSE (272) 27
ISLT (273) 42
ISGT (274) 43
ISLEQ (275) 44
ISGEQ (276) 45
ISEQ (277) 46
AND (278) 38
OR (279) 37
NOT (280) 39
BOOL (281) 36
PLUS (282) 18
MOINS (283) 17
MULT (284) 19
DIV (285)
EQ (286) 7 8
CONCAT (287) 20
UNA (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
prog (35)
    on left: 1 2, on right: 0 2
inst (36)
    on left: 3 4, on right: 1 2
aff (37)
    on left: 5 6, on right: 3 28
aff_id (38)
    on left: 7, on right: 5
aff_fun (39)
    on left: 8, on right: 6
fun_head (40)
    on left: 9, on right: 8
id_list (41)
    on left: 10 11, on right: 9 11
exp <val> (42)
    on left: 12 13 14 15 16, on right: 4 7 8 17 18 19 20 26 34 35 40
arith_exp <val> (43)
    on left: 17 18 19 20, on right: 12
atom_exp <val> (44)
    on left: 21 22 23 24 25 26, on right: 13 27 28 31 32
control_exp (45)
    on left: 27, on right: 14
let_exp <val> (46)
    on left: 28, on right: 15
let2 (47)
    on left: 29, on right: 28
funcall_exp (48)
    on left: 30, on right: 16
atom_list (49)
    on left: 31 32, on right: 30 32
list_exp (50)
    on left: 33, on right: 25
exp_list (51)
    on left: 34 35, on right: 33 35
bool (52)
    on left: 36 37 38 39 40 41, on right: 27 37 38 39 41
comp (53)
    on left: 42 43 44 45 46, on right: 40


State 0

    0 $accept: . prog $end

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    prog         go to state 10
    inst         go to state 11
    aff          go to state 12
    aff_id       go to state 13
    aff_fun      go to state 14
    fun_head     go to state 15
    exp          go to state 16
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 1

   21 atom_exp: NUM .

    $default  reduce using rule 21 (atom_exp)


State 2

   22 atom_exp: FLOAT .

    $default  reduce using rule 22 (atom_exp)


State 3

    7 aff_id: ID . EQ exp
    9 fun_head: ID . id_list
   24 atom_exp: ID .

    ID  shift, and go to state 23
    EQ  shift, and go to state 24

    $default  reduce using rule 24 (atom_exp)

    id_list  go to state 25


State 4

   23 atom_exp: STRING .

    $default  reduce using rule 23 (atom_exp)


State 5

   16 exp: LPAR . funcall_exp RPAR
   26 atom_exp: LPAR . exp RPAR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 26
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 27
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    funcall_exp  go to state 28
    list_exp     go to state 22


State 6

   33 list_exp: LBR . exp_list RBR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 30
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22
    exp_list     go to state 31


State 7

   29 let2: LET .

    $default  reduce using rule 29 (let2)


State 8

   27 control_exp: IF . bool THEN atom_exp ELSE atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 32
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 33
    BOOL    shift, and go to state 34
    MOINS   shift, and go to state 9

    exp          go to state 35
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22
    bool         go to state 36


State 9

   17 arith_exp: MOINS . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 37
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 10

    0 $accept: prog . $end
    2 prog: prog . inst PV

    $end    shift, and go to state 38
    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    inst         go to state 39
    aff          go to state 12
    aff_id       go to state 13
    aff_fun      go to state 14
    fun_head     go to state 15
    exp          go to state 16
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 11

    1 prog: inst . PV

    PV  shift, and go to state 40


State 12

    3 inst: aff .

    $default  reduce using rule 3 (inst)


State 13

    5 aff: aff_id .

    $default  reduce using rule 5 (aff)


State 14

    6 aff: aff_fun .

    $default  reduce using rule 6 (aff)


State 15

    8 aff_fun: fun_head . EQ exp

    EQ  shift, and go to state 41


State 16

    4 inst: exp .
   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 4 (inst)


State 17

   12 exp: arith_exp .

    $default  reduce using rule 12 (exp)


State 18

   13 exp: atom_exp .

    $default  reduce using rule 13 (exp)


State 19

   14 exp: control_exp .

    $default  reduce using rule 14 (exp)


State 20

   15 exp: let_exp .

    $default  reduce using rule 15 (exp)


State 21

   28 let_exp: let2 . aff IN atom_exp

    ID  shift, and go to state 45

    aff       go to state 46
    aff_id    go to state 13
    aff_fun   go to state 14
    fun_head  go to state 15


State 22

   25 atom_exp: list_exp .

    $default  reduce using rule 25 (atom_exp)


State 23

   10 id_list: ID .

    $default  reduce using rule 10 (id_list)


State 24

    7 aff_id: ID EQ . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 47
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 25

    9 fun_head: ID id_list .
   11 id_list: id_list . ID

    ID  shift, and go to state 48

    $default  reduce using rule 9 (fun_head)


State 26

   24 atom_exp: ID .
   30 funcall_exp: ID . atom_list

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 49
    LBR     shift, and go to state 6

    $default  reduce using rule 24 (atom_exp)

    atom_exp   go to state 50
    atom_list  go to state 51
    list_exp   go to state 22


State 27

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   26 atom_exp: LPAR exp . RPAR

    RPAR    shift, and go to state 52
    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44


State 28

   16 exp: LPAR funcall_exp . RPAR

    RPAR  shift, and go to state 53


State 29

   24 atom_exp: ID .

    $default  reduce using rule 24 (atom_exp)


State 30

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   34 exp_list: exp .

    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 34 (exp_list)


State 31

   33 list_exp: LBR exp_list . RBR
   35 exp_list: exp_list . VIR exp

    RBR  shift, and go to state 54
    VIR  shift, and go to state 55


State 32

   16 exp: LPAR . funcall_exp RPAR
   26 atom_exp: LPAR . exp RPAR
   41 bool: LPAR . bool RPAR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 26
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 32
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 33
    BOOL    shift, and go to state 34
    MOINS   shift, and go to state 9

    exp          go to state 56
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    funcall_exp  go to state 28
    list_exp     go to state 22
    bool         go to state 57


State 33

   39 bool: NOT . bool

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 32
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 33
    BOOL    shift, and go to state 34
    MOINS   shift, and go to state 9

    exp          go to state 35
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22
    bool         go to state 58


State 34

   36 bool: BOOL .

    $default  reduce using rule 36 (bool)


State 35

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   40 bool: exp . comp exp

    ISLT    shift, and go to state 59
    ISGT    shift, and go to state 60
    ISLEQ   shift, and go to state 61
    ISGEQ   shift, and go to state 62
    ISEQ    shift, and go to state 63
    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    comp  go to state 64


State 36

   27 control_exp: IF bool . THEN atom_exp ELSE atom_exp
   37 bool: bool . OR bool
   38     | bool . AND bool

    THEN  shift, and go to state 65
    AND   shift, and go to state 66
    OR    shift, and go to state 67


State 37

   17 arith_exp: MOINS exp .
   18          | exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    $default  reduce using rule 17 (arith_exp)


State 38

    0 $accept: prog $end .

    $default  accept


State 39

    2 prog: prog inst . PV

    PV  shift, and go to state 68


State 40

    1 prog: inst PV .

    $default  reduce using rule 1 (prog)


State 41

    8 aff_fun: fun_head EQ . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 69
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 42

   18 arith_exp: exp PLUS . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 70
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 43

   19 arith_exp: exp MULT . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 71
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 44

   20 arith_exp: exp CONCAT . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 72
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 45

    7 aff_id: ID . EQ exp
    9 fun_head: ID . id_list

    ID  shift, and go to state 23
    EQ  shift, and go to state 24

    id_list  go to state 25


State 46

   28 let_exp: let2 aff . IN atom_exp

    IN  shift, and go to state 73


State 47

    7 aff_id: ID EQ exp .
   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 7 (aff_id)


State 48

   11 id_list: id_list ID .

    $default  reduce using rule 11 (id_list)


State 49

   26 atom_exp: LPAR . exp RPAR

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 27
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 50

   31 atom_list: atom_exp .

    $default  reduce using rule 31 (atom_list)


State 51

   30 funcall_exp: ID atom_list .
   32 atom_list: atom_list . atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 49
    LBR     shift, and go to state 6

    $default  reduce using rule 30 (funcall_exp)

    atom_exp  go to state 74
    list_exp  go to state 22


State 52

   26 atom_exp: LPAR exp RPAR .

    $default  reduce using rule 26 (atom_exp)


State 53

   16 exp: LPAR funcall_exp RPAR .

    $default  reduce using rule 16 (exp)


State 54

   33 list_exp: LBR exp_list RBR .

    $default  reduce using rule 33 (list_exp)


State 55

   35 exp_list: exp_list VIR . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 75
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 56

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   26 atom_exp: LPAR exp . RPAR
   40 bool: exp . comp exp

    RPAR    shift, and go to state 52
    ISLT    shift, and go to state 59
    ISGT    shift, and go to state 60
    ISLEQ   shift, and go to state 61
    ISGEQ   shift, and go to state 62
    ISEQ    shift, and go to state 63
    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    comp  go to state 64


State 57

   37 bool: bool . OR bool
   38     | bool . AND bool
   41     | LPAR bool . RPAR

    RPAR  shift, and go to state 76
    AND   shift, and go to state 66
    OR    shift, and go to state 67


State 58

   37 bool: bool . OR bool
   38     | bool . AND bool
   39     | NOT bool .

    $default  reduce using rule 39 (bool)


State 59

   42 comp: ISLT .

    $default  reduce using rule 42 (comp)


State 60

   43 comp: ISGT .

    $default  reduce using rule 43 (comp)


State 61

   44 comp: ISLEQ .

    $default  reduce using rule 44 (comp)


State 62

   45 comp: ISGEQ .

    $default  reduce using rule 45 (comp)


State 63

   46 comp: ISEQ .

    $default  reduce using rule 46 (comp)


State 64

   40 bool: exp comp . exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 5
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    MOINS   shift, and go to state 9

    exp          go to state 77
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22


State 65

   27 control_exp: IF bool THEN . atom_exp ELSE atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 49
    LBR     shift, and go to state 6

    atom_exp  go to state 78
    list_exp  go to state 22


State 66

   38 bool: bool AND . bool

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 32
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 33
    BOOL    shift, and go to state 34
    MOINS   shift, and go to state 9

    exp          go to state 35
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22
    bool         go to state 79


State 67

   37 bool: bool OR . bool

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 32
    LBR     shift, and go to state 6
    LET     shift, and go to state 7
    IF      shift, and go to state 8
    NOT     shift, and go to state 33
    BOOL    shift, and go to state 34
    MOINS   shift, and go to state 9

    exp          go to state 35
    arith_exp    go to state 17
    atom_exp     go to state 18
    control_exp  go to state 19
    let_exp      go to state 20
    let2         go to state 21
    list_exp     go to state 22
    bool         go to state 80


State 68

    2 prog: prog inst PV .

    $default  reduce using rule 2 (prog)


State 69

    8 aff_fun: fun_head EQ exp .
   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 8 (aff_fun)


State 70

   18 arith_exp: exp . PLUS exp
   18          | exp PLUS exp .
   19          | exp . MULT exp
   20          | exp . CONCAT exp

    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 18 (arith_exp)


State 71

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   19          | exp MULT exp .
   20          | exp . CONCAT exp

    CONCAT  shift, and go to state 44

    $default  reduce using rule 19 (arith_exp)


State 72

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   20          | exp CONCAT exp .

    $default  reduce using rule 20 (arith_exp)


State 73

   28 let_exp: let2 aff IN . atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 49
    LBR     shift, and go to state 6

    atom_exp  go to state 81
    list_exp  go to state 22


State 74

   32 atom_list: atom_list atom_exp .

    $default  reduce using rule 32 (atom_list)


State 75

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   35 exp_list: exp_list VIR exp .

    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 35 (exp_list)


State 76

   41 bool: LPAR bool RPAR .

    $default  reduce using rule 41 (bool)


State 77

   18 arith_exp: exp . PLUS exp
   19          | exp . MULT exp
   20          | exp . CONCAT exp
   40 bool: exp comp exp .

    PLUS    shift, and go to state 42
    MULT    shift, and go to state 43
    CONCAT  shift, and go to state 44

    $default  reduce using rule 40 (bool)


State 78

   27 control_exp: IF bool THEN atom_exp . ELSE atom_exp

    ELSE  shift, and go to state 82


State 79

   37 bool: bool . OR bool
   38     | bool . AND bool
   38     | bool AND bool .

    $default  reduce using rule 38 (bool)


State 80

   37 bool: bool . OR bool
   37     | bool OR bool .
   38     | bool . AND bool

    AND  shift, and go to state 66

    $default  reduce using rule 37 (bool)


State 81

   28 let_exp: let2 aff IN atom_exp .

    $default  reduce using rule 28 (let_exp)


State 82

   27 control_exp: IF bool THEN atom_exp ELSE . atom_exp

    NUM     shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 29
    STRING  shift, and go to state 4
    LPAR    shift, and go to state 49
    LBR     shift, and go to state 6

    atom_exp  go to state 83
    list_exp  go to state 22


State 83

   27 control_exp: IF bool THEN atom_exp ELSE atom_exp .

    $default  reduce using rule 27 (control_exp)
